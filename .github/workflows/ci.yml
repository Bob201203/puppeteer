name: CI

# Declare default permissions as read only.
permissions: read-all

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - '**'

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  check-docs:
    name: Check documentation
    runs-on: ubuntu-latest
    outputs:
      needs_deploying: ${{ steps.needs_deploying.outputs.value }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3.3.0
        with:
          cache: npm
      - name: Create browser cache
        uses: actions/cache@v3
        with:
          path: |
            .local-chromium
            .local-firefox
          key: ${{ runner.os }}-browsers-${{ hashFiles('src/revisions.ts') }}
      - name: Install dependencies
        run: npm ci
      - name: Build
        run: npm run docs
      - name: Diff docs
        run: $(git diff) || exit 1
      - name: Check if docs need to be deployed
        id: needs_deploying
        run: |
          if [[ $(git diff @~ -- ./docs ./website) ]]; then
            needs_deploying=true
          else
            needs_deploying=false
          fi
          echo "::set-output name=value::$needs_deploying"

  deploy-docs:
    needs: check-docs
    name: Deploy docs (if needed)
    if: ${{ needs.check-docs.outputs.needs_deploying == 'true' && github.event_name != 'pull_request' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - name: Set up Node.js
        uses: actions/setup-node@v3.3.0
        with:
          cache: npm
      - name: Install dependencies
        working-directory: ./website
        run: npm ci
      - name: Deploy website (if needed)
        working-directory: ./website
        run: npm run build
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./website/build
          user_name: release-please[bot]
          user_email: 55107282+release-please[bot]@users.noreply.github.com

  check-code:
    name: Check code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - name: Set up Node.js
        uses: actions/setup-node@v3.3.0
        with:
          cache: npm
      - name: Create browser cache
        uses: actions/cache@v3
        with:
          path: |
            .local-chromium
            .local-firefox
          key: ${{ runner.os }}-browsers-${{ hashFiles('src/revisions.ts') }}
      - name: Install dependencies
        run: npm ci
      - name: Lint and check code
        run: |
          npm run lint
          npm run check
      - name: Lint commits (only for push to main)
        if: github.event_name != 'pull_request'
        run: npm run commitlint

  linux:
    name: Linux runtime tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # Include all major maintenance + active LTS + current Node.js versions.
        # https://github.com/nodejs/Release#release-schedule
        node: [14, 16, 18]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3.3.0
        with:
          node-version: ${{ matrix.node }}
          cache: npm
      - name: Create browser cache
        uses: actions/cache@v3
        with:
          path: |
            .local-chromium
            .local-firefox
          key: ${{ runner.os }}-browsers-${{ hashFiles('src/revisions.ts') }}
      - name: Install with Chrome
        run: npm ci
      - name: Install with Firefox
        env:
          PUPPETEER_PRODUCT: 'firefox'
        run: npm ci
      - name: Install testing dependencies
        run: sudo apt-get install xvfb
      - name: Build
        run: npm run build
      - name: Run tests
        run: xvfb-run --auto-servernum npm test
      - name: Run headless test
        run: xvfb-run --auto-servernum npm run test:chrome:headless
      - name: Run headful test
        run: xvfb-run --auto-servernum npm run test:chrome:headful

  other-oses:
    name: ${{ matrix.os.name }} runtime tests
    runs-on: ${{ matrix.os.release }}
    strategy:
      matrix:
        os:
          - name: 'macOS'
            release: 'macos-latest'
          - name: 'Windows'
            release: 'windows-latest'
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3.3.0
        with:
          # Test only the oldest maintenance LTS Node.js version.
          # https://github.com/nodejs/Release#release-schedule
          node-version: 14
      - name: Create browser cache
        uses: actions/cache@v3
        with:
          path: |
            .local-chromium
            .local-firefox
          key: ${{ runner.os }}-browsers-${{ hashFiles('src/revisions.ts') }}
      - name: Install with Chrome
        run: npm ci
      - name: Install with Firefox
        env:
          PUPPETEER_PRODUCT: 'firefox'
        run: npm ci
      - name: Build
        run: npm run build
      - name: Run tests
        run: npm test
